{"version":3,"sources":["webpack:///./src/components/mdxLink.js","webpack:///./src/templates/post.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-mdx/mdx-renderer.js"],"names":["MdxLink","href","props","console","log","test","to","Post","mdx","data","className","frontmatter","title","components","a","code","body","query","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","React","require","MDXTag","withMDXComponents","withMDXScope","module","scope","children","fullScope","keys","values","key","End","fn"],"mappings":"8KAGA,IAiBeA,EAbC,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAASC,E,oIAAY,aAMtC,OALAC,QAAQC,IAAI,eACZD,QAAQC,IAAI,QACZD,QAAQC,IAAIH,GACZE,QAAQC,IAAI,SACZD,QAAQC,IAAIF,GATQ,KAAKG,KAUXJ,KATS,YAAYI,KASAJ,GACjC,uCAAOC,EAAP,CAAcD,KAAMA,KAEpB,kBAAC,IAAD,iBAAmBC,EAAnB,CAA0BI,GAAIL,MChBlC,sCASAE,QAAQC,IAAI,QAeGG,UAbF,SAAC,GAAD,IAAWC,EAAX,EAAGC,KAAQD,IAAX,OACX,yBAAKE,UAAU,YACb,4BAAKF,EAAIG,YAAYC,OACrB,kBAAC,IAAD,CACEC,WAAY,CACVC,EAAGd,IAGJQ,EAAIO,KAAKC,QARhB,IAeaC,EAAK,c,oBCzBlB,IAAIC,EAAU,EAAQ,GAClBC,EAAS,EAAQ,IACjBC,EAAY,EAAQ,IACpBC,EAAW,EAAQ,GACnBC,EAAW,EAAQ,GACnBC,EAAQ,EAAQ,IAChBC,EAAO,EAAQ,KACfC,GAAc,EAAQ,GAAaC,SAAW,IAAIC,UAIlDC,EAAiBL,GAAM,WACzB,SAASM,KACT,QAASJ,GAAW,cAA6B,GAAII,aAAcA,MAEjEC,GAAYP,GAAM,WACpBE,GAAW,kBAGbP,EAAQA,EAAQa,EAAIb,EAAQW,GAAKD,GAAkBE,GAAW,UAAW,CACvEH,UAAW,SAAmBK,EAAQC,GACpCb,EAAUY,GACVX,EAASY,GACT,IAAIC,EAAYC,UAAUC,OAAS,EAAIJ,EAASZ,EAAUe,UAAU,IACpE,GAAIL,IAAaF,EAAgB,OAAOH,EAAWO,EAAQC,EAAMC,GACjE,GAAIF,GAAUE,EAAW,CAEvB,OAAQD,EAAKG,QACX,KAAK,EAAG,OAAO,IAAIJ,EACnB,KAAK,EAAG,OAAO,IAAIA,EAAOC,EAAK,IAC/B,KAAK,EAAG,OAAO,IAAID,EAAOC,EAAK,GAAIA,EAAK,IACxC,KAAK,EAAG,OAAO,IAAID,EAAOC,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACjD,KAAK,EAAG,OAAO,IAAID,EAAOC,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAG5D,IAAII,EAAQ,CAAC,MAEb,OADAA,EAAMC,KAAKC,MAAMF,EAAOJ,GACjB,IAAKT,EAAKe,MAAMP,EAAQK,IAGjC,IAAIG,EAAQN,EAAUO,UAClBC,EAAWvB,EAAOG,EAASkB,GAASA,EAAQG,OAAOF,WACnDG,EAASC,SAASN,MAAMO,KAAKd,EAAQU,EAAUT,GACnD,OAAOX,EAASsB,GAAUA,EAASF,M,8qDC5CvC,IAAMK,EAAQC,EAAd,GACQC,EAAWD,EAAQ,IAAnBC,OACAC,EAAsBF,EAAQ,IAA9BE,kBACAC,EAAiBH,EAAQ,KAAzBG,aAERC,UAAiBD,EACfD,GAAkB,YAA0D,IAAD,IAAtDG,aAAsD,MAA9C,GAA8C,MAA1CxC,kBAA0C,MAA7B,GAA6B,EAAzByC,EAAyB,EAAzBA,SAAapD,E,oIAAY,sCACzE,MACE,OAAO,KAET,IAAMqD,EAAS,GAGbR,MAHa,EAIbE,UARuE,GAanEO,EAAOb,YAAb,GACMc,EAASD,EAAA,KAAS,SAAAE,GAAG,OAAIH,EAAJ,MAGrBI,EAFE,mCAAR,KAEYC,2BAAZ,KACA,OAAOb,EAAA,mBAA2BlC,cAAlC","file":"component---src-templates-post-js-1536019f3c49687dac71.js","sourcesContent":["import React from \"react\";\nimport LocalizedLink from \"./localizedLink\";\n\nconst isHash = str => /^#/.test(str);\nconst isInternal = to => /^\\/(?!\\/)/.test(to);\n\n// Only use <LocalizedLink /> for internal links\nconst MdxLink = ({ href, ...props }) => {\n  console.log(\"Use MdxLink\");\n  console.log(\"href\");\n  console.log(href);\n  console.log(\"props\");\n  console.log(props);\n  return isHash(href) || !isInternal(href) ? (\n    <a {...props} href={href} />\n  ) : (\n    <LocalizedLink {...props} to={href} />\n  );\n};\n\nexport default MdxLink;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport MDXRenderer from \"gatsby-mdx/mdx-renderer\";\nimport MdxLink from \"../components/mdxLink\";\n\n// The normal <a> tag is modified here (so that internal links use gatsby-link/LocalizedLink\n// More info:\n// https://www.gatsbyjs.org/docs/mdx/customizing-components/\n\nconsole.log(\"Post\");\n\nconst Post = ({ data: { mdx } }) => (\n  <div className=\"blogpost\">\n    <h1>{mdx.frontmatter.title}</h1>\n    <MDXRenderer\n      components={{\n        a: MdxLink\n      }}\n    >\n      {mdx.code.body}\n    </MDXRenderer>\n  </div>\n);\n\nexport default Post;\n\nexport const query = graphql`\n  query Post($locale: String!, $title: String!) {\n    mdx(\n      frontmatter: { title: { eq: $title } }\n      fields: { locale: { eq: $locale } }\n    ) {\n      frontmatter {\n        title\n      }\n      code {\n        body\n      }\n    }\n  }\n`;\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","const React = require(\"react\");\nconst { MDXTag } = require(\"@mdx-js/tag\");\nconst { withMDXComponents } = require(\"@mdx-js/tag/dist/mdx-provider\");\nconst { withMDXScope } = require(\"./context\");\n\nmodule.exports = withMDXScope(\n  withMDXComponents(({ scope = {}, components = {}, children, ...props }) => {\n    if (!children) {\n      return null;\n    }\n    const fullScope = {\n      // React and MDXTag are here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      MDXTag,\n      ...scope\n    };\n\n    // children is pre-compiled mdx\n    const keys = Object.keys(fullScope);\n    const values = keys.map(key => fullScope[key]);\n    const fn = new Function(\"_fn\", ...keys, `${children}`);\n\n    const End = fn({}, ...values);\n    return React.createElement(End, { components, ...props });\n  })\n);\n"],"sourceRoot":""}